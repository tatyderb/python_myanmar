# list

lesson = 723108

## Список list

* **Строка** - это последовательность символов. Строку нельзя изменить. Можно создать новую строку.
* **Список** (list) - это последовательность любых элементов. Список можно изменить.

### Объявить список

```python
a1 = ['red', 'yellow', 'green']	# список из строк
a2 = [100, -50, 120, 34]		# список из целых чисел
a3 = ['red', 100, 'green', 50]  # список из элементов разных типов
a4 = [-4, [6, 12], 'hi']		# список может элементом другого списка
```
Список из строк:
```python
colors = [
  'violet',   # colors[0]
  'blue',     # colors[1]
  'green',    # colors[2]
  'yellow',   # colors[3]
  'gold',     # colors[4]
  'orange',   # colors[5]
  'red'       # colors[6]
  ]
```

## Список и строка

Строка отличаются от списка: 

* Строки нельзя изменить. Список можно изменить.
* В строке только символы. В списке могут быть разные типы: числа, строки, другие списки и объекты.

| Что делаем | список list | строка str | 
|----|----|----|
| создать | `a = [3, -7, 19]` | `s = 'Myanmar'` |
| 1 элемент | `a[0]` это 3 | `s[0]` это `'M'` |
| 1 последний элемент | `a[-1]` это 19 | `s[0]` это `'r'` |
| печать | `print(a)` будет `[3, -7, 19]` | `print(s)` будет `Myanmar` |
| изменить | `a[0] = 66`, список стал `[66, -7, 19]` | `s[0] = 'm'` **Ошибка! Нельзя изменить строку** |
| длина **len** | `len(a)` равен 3 | `len(s)` равен 7 | 
| a + b | `[1, 2, 3] + [10, 5]` получим `[1, 2, 3, 10, 5]` | `s + ' ' + 'Russia'` получим `'Myanmar Russia'` | 
| `a * 3` | `[10, 7] * 3` получим `[10, 7, 10, 7, 10, 7]` | `'hi'*3` получим `'hihihi'` | 

Список из 5 нулей:
```python
a = [0] * 5		# это a = [0, 0, 0, 0, 0]
```

## Напечатать список

Функции print можно передать много аргументов. Ей можно передать список.
```python
print(100, -50, 20, 'red')	# напечатает 100 -50 20 red
a = [100, -50, 20, 'red']
print(a)					# напечатает [100, -50, 20, 'red']
```
напечатает
```python
100 -50 20 red
[100, -50, 20, 'red']
```
Список печатается:

* `[` в начале и `]` в конце,
* через запятую `,`
* строки печатаются в кавычках `'` (single quotes) 

### sep и end в функции print

```python
print(100, -50, 20, 'red')
print('blue', 15)
```
Напечатает
```python
100 -50 20 red
blue 15
```

У функции **print** есть специальные аргументы. Их нужно писать в конце.

* **sep** (separator) - что печатать между данными. По умолчанию (by default) это пробел ` `.
* **end** - что печатать в конце. По умолчанию это символ "новая строка" `\n`.

`print(100, -50, 20, 'red')` - **между** 100, -50, 20 и red пишем пробел и **в конце** переходим на новую строку.

```python
print(100, -50, 20, 'red', sep=';', end='!')
print('blue', 15, sep='AHAHA')
```
напечатает
```python
100;-50;20;red!blueAHAHA15
```
Можно печатать слитно. `sep=''` (пустая строка)






