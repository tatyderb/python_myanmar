## Задача 2.2.5 https://stepik.org/lesson/403872/step/5?unit=393073

4 ножки и 1 столешница  = 1 стол.
Дано N ножек. Сколько можно сделать столов?

1 table has 1 table-cup and 4 legs.
How many tables can be made from N legs?

TEST
12
----
3
====
11
----
2
====
5
----
1
====

## Задача 2.2.7 https://stepik.org/lesson/403872/step/7?unit=393073

Студент хочет купить на обед в столовой. 1 порцию риса за k_rice рублей и 2 салата за k_veg рублей каждый.
Вычислите и напечатайте, сколько стоит обед.

Student wants to buy 1 cup of rice for k_rice dollars each and 2 salads for 2 for k_veg dollars each.
Print the cost of his meal.

TEST
15 30
----
75
====
15 20
----
55
====
15 10
----
35
====
10 7
----
24
====

## Задача 2.3.4 https://stepik.org/lesson/408292/step/4?unit=397593

Посчитать объем параллелограмма

Напишите программу, которая читает размеры длин параллелограмма (a, b, c обычные числа float) и печатает его объем V.

V = a * b * c

Написать функцию

def volume(a, b, c):
    # тут нужно написать код

x, y, z = map(float, input().split())   # читаем числа
v = volume(x, y, z)                     # вызываем функцию
print(v)                                # печатаем результат

TEST
10 2.5 3
----
75.0
====
1 2 3
----
6.0
====

## Задача 2.3.5 https://stepik.org/lesson/408292/step/5?unit=397593 

Найти расстояние между 2 точками на плоскости XY

Даны координаты 2 точек (x1, y1) и (x2, y2). 

Написать функцию dist(x1, y1, x2, y2), которая вычисляет расстояние между ними по формуле c^2 = (x_1 - x_2)^2 + (y_1 - y_2)^2

Рисунок: http://judge2.vdi.mipt.ru/tasks/func/length2D.png

Программа:
from math import sqrt  # функция вычисляет квадратный корень

def dist(x1, y1, x2, y2):
    # тут нужно написать код

x1, y1, x2, y2 = map(float, input().split())    # читаем числа
d = dist(x1, y1, x2, y2)                        # вызываем функцию
print(d)                                        # печатаем результат

TEST
3 0 0 4
---
5.0
====
0 4 3 0
---
5.0
====
0 1 0 5
---
4.0
====
1 2 3 4
----
2.8284271247461903
====
-1.3 5.1 1.7 1.1
---
5.0
====

## Задача 2.3.6 https://stepik.org/lesson/408292/step/6?unit=397593

Площадь треугольника

Даны координаты 3 вершин треугольника (x1, y1), (x2, y2), (x3, y3). 

Из задачи 2.3.5 скопируйте функцию dist(x1, y1, x2, y2), которая вычисляет расстояние между 2 точками по формуле c^2 = (x_1 - x_2)^2 + (y_1 - y_2)^2.

Напишите функцию area(x1, y1, x2, y2, x3, y3), которая вычисляет площадь треугольника со сторонами a, b, c по формуле s^2 = p * (p - a) * (p - b) * (p-c)}, где p = (a + b + c) / 2

http://judge2.vdi.mipt.ru/tasks/func/geron.jpg


from math import sqrt  # функция вычисляет квадратный корень

def dist(x1, y1, x2, y2):
    # скопируйте код из предыдущей задачи
    
def area(x1, y1, x2, y2, x3, y3):
    # тут нужно написать код

x1, y1, x2, y2, x3, y3 = map(float, input().split())
s = area(x1, y1, x2, y2, x3, y3)
print(s)

TEST
3 0 0 4 0 0
---
6.0
====
0 4 3 0 0 0 
---
6.0
====
0 1 0 5 1 2
---
1.9999999999999991
====
1 2 3 4 5 6
----
0.0
====
-1.3 5.1 1.7 1.1 1.7 5.1
---
6.000000000000001
====

Может быть не 1.9999999999999991 и 6.000000000000001 а "почти 2" и "почти 6". Это тоже правильно.


## Задача 2.3.13 Наоборот https://stepik.org/lesson/408292/step/13?unit=397593

Дополнительная задача на отлично. Ее можно не решать, если не нужно оценка отлично.

Дано число x из 3 цифр. Написать функцию , которая переворачивает число. Из 123 делает 321. Из 150 делает 51.

Напишите функцию obrat(x), которая из целого числа х вычисляет число наоборот без 0 сначала.

def obrat(x):
    # тут нужно написать код

n = int(input())
res = obrat(n)
print(res)

TEST
123
---
321
====
150
---
51
====
700
---
7
====
801
----
108
====

## Задача 2.4.4 https://stepik.org/lesson/408394/step/4?unit=397697

Часы показывают часы h и минуты m.

Сколько минут mm минут прошло с начала суток (с 0:00).

Для решения задачи напишите и отладьте функцию

time2min(h, m)


def time2min(h, m):
    # тут нужно написать код

h, m = map(int, input().split(':')) # делю строку на слова по :
mm = time2min(h, m)
print(mm)


TEST
2:15
----
135
====
0:15
----
15
====
7:00
----
420
====

## Задача 2.4.5 https://stepik.org/lesson/408394/step/5?unit=397697

Из минут в часы и минуты

Прошло mm с начала суток (с 0:00).

Сколько показывают часы h и минуты m?
Для решения задачи напишите и отладьте функцию
min2time(mm)

Функция может возвращать много значений через запятую.

Когда мы писали в предыдущей задаче
h, m = map(int, input().split(':'))

Функция map возвращала 2 числа. Можно написать функцию min2time, чтобы она тоже вернула 2 числа:


def min2time(mm):
    # тут нужно написать код
    h = ...
    m = ...
    return h, m             # возвращает 2 числа, пишем через запятую

mm = int(input())
h, m = min2time(mm)
print(f'{h:02}:{m:02}')     # печатаем по формату hh:mm 

Внимание! Если минут очень много и прошло больше 1 дня, на часах все равно не может быть больше 23:55. Через 1575 минут с 0:00 покажет 2:15.

TEST
135
----
02:15
====
1595
----
02:35
====
15
----
00:15
====
420
----
07:00
====

## Задача 2.4.6 https://stepik.org/lesson/408394/step/6?unit=397697 

Поезд отправляется в h1:m1. Время в пути h2:m2.

Во сколько прибыл поезд h:m

Скопируйте функции из предыдущих задач. Новые функции можно не писать.

TEST
12:01
17:56
---
05:57
====
12:11
17:56
---
06:07
====
11:59
12:01
---
00:00
====

## Задача 2.4.7 https://stepik.org/lesson/408394/step/7?unit=397697 

Отправление электрички в h1:m1. Прибытие электрички h2:m2.

Сколько времени ехала электричка hh:mm?

Электричка не ездит далеко. Она не может ехать больше 24 часов.

Электричка может отправиться в 23:45 минут с Тимирязевской и быть в 00:07 минут на Долгопрудной. Время в пути 00:21.

Скопируйте функции из предыдущих задач. Новые функции можно не писать.

TEST
12:30
13:12
---
00:42
====
23:45
00:07
---
00:22
====
12:01
05:57
---
17:56
====
12:11
06:07
---
17:56
====
11:59
00:00
---
12:01
====
